version: 2.1

orbs:
  go: circleci/go@1.3
  win: circleci/windows@2.4

workflows:
  main:
    jobs:
      - generic-tests
      - unit-tests
      - release
      - release-on-macos
      - release-on-snap:
          requires:
            - release
          context: main-context
  release:
    jobs:
      - generic-tests:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - unit-tests:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - release:
          requires:
            - unit-tests
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
          context: main-context
      - release-on-macos:
          requires:
            - release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
          context: main-context
      - release-on-snap:
          requires:
            - release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
          context: main-context

jobs:
  generic-tests:
    docker:
      - image: cimg/base:2020.12
    working_directory: "~/strawberry-v0/src"
    steps:
      - checkout:
          path: ".."
      - run:
          name: "Fork Tests"
          command: ../scripts/fork-tests.sh
  unit-tests:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: "~/strawberry-v0/src"
    environment:
      GOTESTSUM_JUNITFILE: "junit/unit-tests-linux.xml"
    steps:
      - checkout:
          path: ".."
      - go/install:
          version: "1.15.6"
      - run:
          name: "Install Dependencies"
          command: |
            curl -sSL "https://github.com/magefile/mage/releases/download/v1.10.0/mage_1.10.0_Linux-64bit.tar.gz" | sudo tar -xz --no-same-owner -C /usr/local/bin mage
            mage --version
            curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v0.6.0/gotestsum_0.6.0_linux_amd64.tar.gz" | sudo tar -xz -C /usr/local/bin gotestsum
            gotestsum --version
      - run:
          name: "Generate Go Test Cache Timestamp"
          command: ../scripts/timestamp-generator.sh
      - go/load-cache
      - restore_cache:
          key: go-test-cache-v1-{{ arch }}-{{ checksum "./GO_CACHE_TIMESTAMP" }}
      - run:
          name: "Pull & Verify Dependencies"
          command: |
            go mod download
            go mod verify
      - run:
          name: "Run Tests & Coverage"
          command: |
            mkdir junit
            mage -v test
            bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit/unit-tests-linux.xml
      - run:
          name: "Mage Check"
          command: mage -v check
      - go/save-cache
      - save_cache:
          key: go-test-cache-v1-{{ arch }}-{{ checksum "./GO_CACHE_TIMESTAMP" }}
          paths:
            - "/home/circleci/.cache/go-build"
      - run:
          name: "Build Binary"
          command: |
            mage -v hugo
            ./strawberry-v0 version
  release:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: "~/strawberry"
    steps:
      - checkout
      - go/install:
          version: "1.15.6"
      - run:
          name: "Install Deps"
          command: sudo apt-get update && sudo apt-get install mingw-w64
      - run:
          name: "Install GoReleaser"
          command: |
            curl -sSL "https://github.com/goreleaser/goreleaser/releases/download/v0.149.0/goreleaser_Linux_x86_64.tar.gz" | sudo tar -xz -C /usr/local/bin goreleaser
            goreleaser --version
      - run:
          name: "Build Snapshot or Release"
          command: |
            if [[ $CIRCLE_TAG == "" ]]; then
              goreleaser build --config=.goreleaser.yml --skip-validate --rm-dist
            else
              goreleaser release --config=.goreleaser.yml
            fi

            echo "Some information about this binary built by GoReleaser:"
            echo "======================================================="
            ls -lah dist/*/strawberry
            echo ""
            dist/*/strawberry version --type=detailed
      - persist_to_workspace:
          root: "."
          paths:
            - "dist"
  release-on-macos:
    macos:
      xcode: 12.3.0
    working_directory: "~/strawberry"
    steps:
      - checkout
      - go/install:
          version: "1.15.6"
      - run:
          name: "Install GoReleaser"
          command: |
            curl -sSL "https://github.com/goreleaser/goreleaser/releases/download/v0.149.0/goreleaser_Darwin_x86_64.tar.gz" | sudo tar -xz -C /usr/local/bin goreleaser
            goreleaser --version
      - run:
          name: "Build Snapshot or Release"
          command: |
            if [[ $CIRCLE_TAG == "" ]]; then
              goreleaser build --config=.goreleaser.yml --skip-validate --rm-dist
            else
              goreleaser release --config=.goreleaser.macos.yml
            fi

            echo "Some information about this binary built by GoReleaser:"
            echo "======================================================="
            ls -lah dist/*/strawberry
            echo ""
            dist/*/strawberry version --type=detailed
  release-on-snap:
    docker:
      - image: cibuilds/snapcraft:core20
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Build Snap"
          command: snapcraft
      - run:
          name: "Publish to Snap Store in the Stable Channel"
          command: |
            # Snapcraft Tokens are valid for 1 year. This one expires February 4th, 2022
            echo $SNAPCRAFT_TOKEN | base64 --decode --ignore-garbage | snapcraft login --with -

            if [[ $CIRCLE_TAG != "" ]]; then
              snapcraft upload *.snap --release=stable
            elif [[ $CIRCLE_BRANCH == "trunk" ]]; then
              snapcraft upload *.snap --release=edge
            fi
